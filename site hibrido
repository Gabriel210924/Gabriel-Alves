<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Friend Robot - Monitoramento e Segurança</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <!-- Navbar -->
    <header class="navbar">
        <h1>My Friend Robot</h1>
        <nav>
            <a href="#monitoramento">Monitoramento</a>
            <a href="#controle">Controle Manual</a>
            <a href="#alertas">Alertas</a>
            <a href="#configuracoes">Configurações</a>
        </nav>
    </header>

    <!-- Seção Inicial -->
    <section id="home" class="home">
        <h2>Segurança e Monitoramento Inteligente</h2>
        <p>Monitore o ambiente e garanta a segurança com o robô que identifica problemas em tempo real.</p>
    </section>

    <!-- Monitoramento em Tempo Real -->
    <section id="monitoramento" class="monitoramento">
        <h2>Monitoramento em Tempo Real</h2>
        <div class="dados">
            <div class="grafico" id="graficoTemperatura">
                <h3>Temperatura</h3>
                <canvas id="temperatureChart"></canvas>
            </div>
            <div class="grafico" id="graficoVibracao">
                <h3>Vibração</h3>
                <canvas id="vibrationChart"></canvas>
            </div>
            <div class="grafico" id="graficoCorrente">
                <h3>Corrente</h3>
                <canvas id="currentChart"></canvas>
            </div>
        </div>
        <div class="imagem-camera">
            <h3>Imagens da Câmera</h3>
            <img id="cameraFeed" src="camera-placeholder.png" alt="Imagem da Câmera">
        </div>
    </section>

    <!-- Controle Manual -->
    <section id="controle" class="controle">
        <h2>Controle Manual</h2>
        <div class="controles">
            <button onclick="move('frente')">Frente</button>
            <button onclick="move('esquerda')">Esquerda</button>
            <button onclick="move('direita')">Direita</button>
            <button onclick="move('tras')">Trás</button>
        </div>
    </section>

    <!-- Alertas e Notificações -->
    <section id="alertas" class="alertas">
        <h2>Alertas e Notificações</h2>
        <div class="alertas-lista">
            <!-- Exibir alertas aqui -->
        </div>
    </section>

    <!-- Configurações -->
    <section id="configuracoes" class="configuracoes">
        <h2>Configurações</h2>
        <form>
            <label for="tempLimite">Limite de Temperatura:</label>
            <input type="number" id="tempLimite" placeholder="Ex: 60">
            
            <label for="vibracaoLimite">Limite de Vibração:</label>
            <input type="number" id="vibracaoLimite" placeholder="Ex: 20">
            
            <label for="correnteLimite">Limite de Corrente:</label>
            <input type="number" id="correnteLimite" placeholder="Ex: 2">
            
            <button type="submit">Salvar Configurações</button>
        </form>
    </section>

    <script src="scripts.js"></script>
</body>
</html>
function move(direction) {
    // Função para enviar o comando de movimento para o robô
    console.log("Movendo para " + direction);
}

// Função para carregar dados do monitoramento
function updateCharts() {
    const temperatureChart = document.getElementById("temperatureChart").getContext('2d');
    const vibrationChart = document.getElementById("vibrationChart").getContext('2d');
    const currentChart = document.getElementById("currentChart").getContext('2d');

    // Exemplo de gráfico - Pode adicionar os dados reais aqui
    new Chart(temperatureChart, {
        type: 'line',
        data: {
            labels: ['0s', '10s', '20s', '30s', '40s'],
            datasets: [{ label: 'Temperatura', data: [22, 23, 21, 24, 25], borderColor: '#f39c12' }]
        }
    });
    
    new Chart(vibrationChart, {
        type: 'line',
        data: {
            labels: ['0s', '10s', '20s', '30s', '40s'],
            datasets: [{ label: 'Vibração', data: [12, 11, 13, 10, 15], borderColor: '#e74c3c' }]
        }
    });
    
    new Chart(currentChart, {
        type: 'line',
        data: {
            labels: ['0s', '10s', '20s', '30s', '40s'],
            datasets: [{ label: 'Corrente', data: [1.2, 1.0, 1.1, 1.3, 1.2], borderColor: '#3498db' }]
        }
    });
}

window.onload = updateCharts;
/* Configurações básicas de estilo */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

.navbar {
    background-color: #333;
    color: #fff;
    padding: 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.navbar nav a {
    color: #fff;
    text-decoration: none;
    margin: 0 10px;
}

.navbar h1 {
    font-size: 24px;
    margin: 0;
}

section {
    padding: 20px;
    max-width: 800px;
    margin: 0 auto;
}

section h2 {
    font-size: 24px;
    color: #333;
}

.monitoramento .dados {
    display: flex;
    justify-content: space-between;
}

.grafico {
    width: 32%;
}

button {
    padding: 10px;
    margin: 5px;
    background-color: #333;
    color: #fff;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #555;
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
